{"ast":null,"code":"var _jsxFileName = \"/Users/abdulrahmanmuse/Development/code/Mod3/phase-3-project-react-repo/color-pallet-app-ruby/src/ColorPalleteItems.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColorPalleteItems(_ref) {\n  _s();\n\n  var _this = this;\n\n  let {\n    deleteShade,\n    shades,\n    background,\n    setBackground\n  } = _ref;\n  return function (deleteShade) {\n    const [current, setCurrent] = useState(null);\n    useEffect(() => {\n      const timeoutId = setTimeout(() => {\n        setCurrent(null);\n      }, 3000);\n      return () => clearTimeout(timeoutId);\n    }, [current]);\n\n    function deleteShade(id) {\n      fetch(`http://localhost:9292/shades/${id}`, {\n        method: \"DELETE\"\n      }).then(r => r.json()).then(deletedReview => console.log(deletedReview));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: background,\n        paddingTop: '35px'\n      },\n      children: [current !== null && /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          paddingTop: \"20px\"\n        },\n        children: [\" Copied \", current]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 34\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: shades.map(shade => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: shade.hex_code,\n              filter: \"brightness(85%)\",\n              boxShadow: shade.hex_code === background ? \"0 0 5px #000\" : \"\"\n            },\n            className: \"box\",\n            onClick: () => setBackground(shade.hex_code)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: `color: ${shade.hex_code};`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: shade.hex_code === background ? \"#fff\" : shade.hex_code,\n                padding: \"7px\",\n                fontSize: 100\n              },\n              onClick: () => setCurrent(shade.hex_code),\n              children: shade.hex_code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              cursor: \"pointer\"\n            },\n            onClick: () => deleteShade(shade.id),\n            children: \"Delete Shade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, _this)]\n        }, shade.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, _this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, _this);\n  }(deleteShade);\n}\n\n_s(ColorPalleteItems, \"8dXYR6SIPaxD+Ih4kqlz7RP5kMA=\");\n\n_c = ColorPalleteItems;\nexport default ColorPalleteItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorPalleteItems\");","map":{"version":3,"sources":["/Users/abdulrahmanmuse/Development/code/Mod3/phase-3-project-react-repo/color-pallet-app-ruby/src/ColorPalleteItems.js"],"names":["useState","useEffect","CopyToClipboard","ColorPalleteItems","deleteShade","shades","background","setBackground","current","setCurrent","timeoutId","setTimeout","clearTimeout","id","fetch","method","then","r","json","deletedReview","console","log","paddingTop","map","shade","hex_code","filter","boxShadow","color","padding","fontSize","cursor"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\n\n\n\nfunction ColorPalleteItems({ deleteShade, shades, background, setBackground }) {\n    const [current, setCurrent] = useState(null);\n\n    useEffect(() => {\n        const timeoutId = setTimeout(() => {\n            setCurrent(null)\n        }, 3000)\n        return () => clearTimeout(timeoutId)\n    }, [current])\n\n    function deleteShade(id){\n        fetch(`http://localhost:9292/shades/${id}`, {\n          method: \"DELETE\",\n        })\n          .then((r) => r.json())\n          .then((deletedReview) => console.log(deletedReview));\n      }\n\n    return (\n        <div style={{ background: background, paddingTop: '35px' }}>\n            {current !== null && <h1 style={{ paddingTop: \"20px\" }}> Copied {current}</h1>}\n            <div className=\"container\">\n                {shades.map((shade) => (\n                    <div key={shade.id} className=\"card\">\n                        <div style={{\n                            background: shade.hex_code,\n                            filter: \"brightness(85%)\",\n                            boxShadow: shade.hex_code === background ? \"0 0 5px #000\" : \"\"\n                        }}\n                            className=\"box\"\n                            onClick={() => setBackground(shade.hex_code)}>\n                        </div>\n                        <CopyToClipboard text={`color: ${shade.hex_code};`}>\n                            <p style={{ color: shade.hex_code === background ? \"#fff\" : shade.hex_code, padding: \"7px\", fontSize: 100 }}\n                                onClick={(() => setCurrent(shade.hex_code))}>{shade.hex_code}</p>\n                        </CopyToClipboard>\n                        <button style={{ cursor: \"pointer\" }} onClick={() => deleteShade(shade.id)} >Delete Shade</button>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default ColorPalleteItems"]},"metadata":{},"sourceType":"module"}