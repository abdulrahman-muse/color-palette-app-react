{"ast":null,"code":"var _jsxFileName = \"/Users/abdulrahmanmuse/Development/code/Mod3/phase-3-project-react-repo/color-pallet-app-ruby/src/ColorPalleteItems.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColorPalleteItems(_ref) {\n  _s();\n\n  let {\n    colors,\n    searchTerm,\n    deleteShade,\n    shades,\n    background,\n    setBackground\n  } = _ref;\n  const [current, setCurrent] = useState(null);\n  const shToShow = shades.filter(sh => cr.hex_code.toLowerCase().includes(searchTerm.toLowerCase()));\n  console.log(crToShow);\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setCurrent(null);\n    }, 3000);\n    return () => clearTimeout(timeoutId);\n  }, [current]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: background,\n      paddingTop: '35px'\n    },\n    children: [current !== null && /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        paddingTop: \"20px\"\n      },\n      children: [\" Copied \", current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: crToShow.map(color => color.shades.map(shade => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: shade.hex_code,\n            filter: \"brightness(85%)\",\n            boxShadow: shade.hex_code === background ? \"0 0 5px #000\" : \"\"\n          },\n          className: \"box\",\n          onClick: () => setBackground(shade.hex_code)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: `color: ${shade.hex_code};`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              cursor: \"pointer\",\n              color: shade.hex_code === background ? \"#fff\" : shade.hex_code,\n              padding: \"7px\",\n              fontSize: 15\n            },\n            onClick: () => setCurrent(shade.hex_code),\n            children: shade.hex_code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            cursor: \"pointer\"\n          },\n          onClick: () => deleteShade(shade.id),\n          children: \"Delete Shade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, shade.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ColorPalleteItems, \"8dXYR6SIPaxD+Ih4kqlz7RP5kMA=\");\n\n_c = ColorPalleteItems;\nexport default ColorPalleteItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorPalleteItems\");","map":{"version":3,"sources":["/Users/abdulrahmanmuse/Development/code/Mod3/phase-3-project-react-repo/color-pallet-app-ruby/src/ColorPalleteItems.js"],"names":["useState","useEffect","CopyToClipboard","ColorPalleteItems","colors","searchTerm","deleteShade","shades","background","setBackground","current","setCurrent","shToShow","filter","sh","cr","hex_code","toLowerCase","includes","console","log","crToShow","timeoutId","setTimeout","clearTimeout","paddingTop","map","color","shade","boxShadow","cursor","padding","fontSize","id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\n\n\n\nfunction ColorPalleteItems({ colors, searchTerm, deleteShade, shades, background, setBackground }) {\n    const [current, setCurrent] = useState(null);\n\n    const shToShow = shades.filter((sh) =>\n        cr.hex_code.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    console.log(crToShow)\n\n    useEffect(() => {\n        const timeoutId = setTimeout(() => {\n            setCurrent(null)\n        }, 3000)\n        return () => clearTimeout(timeoutId)\n    }, [current])\n\n\n    return (\n        <div style={{ background: background, paddingTop: '35px' }}>\n            {current !== null && <h1 style={{ paddingTop: \"20px\" }}> Copied {current}</h1>}\n            <div className=\"container\">\n                {crToShow.map((color) => ( color.shades.map((shade) =>\n                    <div key={shade.id} className=\"card\">\n                        <div style={{\n                            background: shade.hex_code,\n                            filter: \"brightness(85%)\",\n                            boxShadow: shade.hex_code === background ? \"0 0 5px #000\" : \"\"\n                        }}\n                            className=\"box\"\n                            onClick={() => setBackground(shade.hex_code)}>\n                        </div>\n                        <CopyToClipboard text={`color: ${shade.hex_code};`}>\n                            <p style={{ cursor: \"pointer\", color: shade.hex_code === background ? \"#fff\" : shade.hex_code, padding: \"7px\", fontSize: 15 }}\n                                onClick={(() => setCurrent(shade.hex_code))}>{shade.hex_code}</p>\n                        </CopyToClipboard>\n                        <button style={{ cursor: \"pointer\" }} onClick={() => deleteShade(shade.id)} >Delete Shade</button>\n                    </div>\n                )))}\n            </div>\n        </div>\n    )\n}\n\nexport default ColorPalleteItems"]},"metadata":{},"sourceType":"module"}