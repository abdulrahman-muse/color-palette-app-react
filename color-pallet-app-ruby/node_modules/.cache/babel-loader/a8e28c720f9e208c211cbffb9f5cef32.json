{"ast":null,"code":"var _jsxFileName = \"/Users/abdulrahmanmuse/Development/code/Mod3/phase-3-project-react-repo/color-pallet-app-ruby/src/ColorPalleteItems.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColorPalleteItems(_ref) {\n  _s();\n\n  let {\n    deleteShade,\n    shades,\n    background,\n    setBackground\n  } = _ref;\n  const [current, setCurrent] = useState(null);\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setCurrent(null);\n    }, 3000);\n    return () => clearTimeout(timeoutId);\n  }, [current]);\n\n  function removeShade(id) {\n    const newShades = shades.filter(shades => shade.id !== id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: background,\n      paddingTop: '35px'\n    },\n    children: [current !== null && /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        paddingTop: \"20px\"\n      },\n      children: [\" Copied \", current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: shades.map(shade => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: shade.hex_code,\n            filter: \"brightness(85%)\",\n            boxShadow: shade.hex_code === background ? \"0 0 5px #000\" : \"\"\n          },\n          className: \"box\",\n          onClick: () => setBackground(shade.hex_code)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: `color: ${shade.hex_code};`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: shade.hex_code === background ? \"#fff\" : shade.hex_code,\n              padding: \"7px\",\n              fontSize: 15\n            },\n            onClick: () => setCurrent(shade.hex_code),\n            children: shade.hex_code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            cursor: \"pointer\"\n          },\n          onClick: () => deleteShade(shade.id),\n          children: \"Delete Shade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, shade.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ColorPalleteItems, \"8dXYR6SIPaxD+Ih4kqlz7RP5kMA=\");\n\n_c = ColorPalleteItems;\nexport default ColorPalleteItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorPalleteItems\");","map":{"version":3,"sources":["/Users/abdulrahmanmuse/Development/code/Mod3/phase-3-project-react-repo/color-pallet-app-ruby/src/ColorPalleteItems.js"],"names":["useState","useEffect","CopyToClipboard","ColorPalleteItems","deleteShade","shades","background","setBackground","current","setCurrent","timeoutId","setTimeout","clearTimeout","removeShade","id","newShades","filter","shade","paddingTop","map","hex_code","boxShadow","color","padding","fontSize","cursor"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,yBAAhC;;;AAKA,SAASC,iBAAT,OAA+E;AAAA;;AAAA,MAApD;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,UAAvB;AAAmCC,IAAAA;AAAnC,GAAoD;AAC3E,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,SAAS,GAAGC,UAAU,CAAC,MAAM;AAC/BF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAF2B,EAEzB,IAFyB,CAA5B;AAGA,WAAO,MAAMG,YAAY,CAACF,SAAD,CAAzB;AACH,GALQ,EAKN,CAACF,OAAD,CALM,CAAT;;AAOA,WAASK,WAAT,CAAqBC,EAArB,EAAwB;AACpB,UAAMC,SAAS,GAAGV,MAAM,CAACW,MAAP,CAAeX,MAAD,IAAYY,KAAK,CAACH,EAAN,KAAaA,EAAvC,CAAlB;AACH;;AACD,sBACI;AAAK,IAAA,KAAK,EAAE;AAAER,MAAAA,UAAU,EAAEA,UAAd;AAA0BY,MAAAA,UAAU,EAAE;AAAtC,KAAZ;AAAA,eACKV,OAAO,KAAK,IAAZ,iBAAoB;AAAI,MAAA,KAAK,EAAE;AAAEU,QAAAA,UAAU,EAAE;AAAd,OAAX;AAAA,6BAA4CV,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,YADzB,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKH,MAAM,CAACc,GAAP,CAAYF,KAAD,iBACR;AAAoB,QAAA,SAAS,EAAC,MAA9B;AAAA,gCACI;AAAK,UAAA,KAAK,EAAE;AACRX,YAAAA,UAAU,EAAEW,KAAK,CAACG,QADV;AAERJ,YAAAA,MAAM,EAAE,iBAFA;AAGRK,YAAAA,SAAS,EAAEJ,KAAK,CAACG,QAAN,KAAmBd,UAAnB,GAAgC,cAAhC,GAAiD;AAHpD,WAAZ;AAKI,UAAA,SAAS,EAAC,KALd;AAMI,UAAA,OAAO,EAAE,MAAMC,aAAa,CAACU,KAAK,CAACG,QAAP;AANhC;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAG,UAASH,KAAK,CAACG,QAAS,GAAhD;AAAA,iCACI;AAAG,YAAA,KAAK,EAAE;AAAEE,cAAAA,KAAK,EAAEL,KAAK,CAACG,QAAN,KAAmBd,UAAnB,GAAgC,MAAhC,GAAyCW,KAAK,CAACG,QAAxD;AAAkEG,cAAAA,OAAO,EAAE,KAA3E;AAAkFC,cAAAA,QAAQ,EAAE;AAA5F,aAAV;AACI,YAAA,OAAO,EAAG,MAAMf,UAAU,CAACQ,KAAK,CAACG,QAAP,CAD9B;AAAA,sBACkDH,KAAK,CAACG;AADxD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ,eAaI;AAAQ,UAAA,KAAK,EAAE;AAAEK,YAAAA,MAAM,EAAE;AAAV,WAAf;AAAsC,UAAA,OAAO,EAAE,MAAMrB,WAAW,CAACa,KAAK,CAACH,EAAP,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA,SAAUG,KAAK,CAACH,EAAhB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GArCQX,iB;;KAAAA,iB;AAuCT,eAAeA,iBAAf","sourcesContent":["import { useState, useEffect } from \"react\"\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\n\n\n\nfunction ColorPalleteItems({ deleteShade, shades, background, setBackground }) {\n    const [current, setCurrent] = useState(null);\n\n    useEffect(() => {\n        const timeoutId = setTimeout(() => {\n            setCurrent(null)\n        }, 3000)\n        return () => clearTimeout(timeoutId)\n    }, [current])\n\n    function removeShade(id){\n        const newShades = shades.filter((shades) => shade.id !== id)\n    }\n    return (\n        <div style={{ background: background, paddingTop: '35px' }}>\n            {current !== null && <h1 style={{ paddingTop: \"20px\" }}> Copied {current}</h1>}\n            <div className=\"container\">\n                {shades.map((shade) => (\n                    <div key={shade.id} className=\"card\">\n                        <div style={{\n                            background: shade.hex_code,\n                            filter: \"brightness(85%)\",\n                            boxShadow: shade.hex_code === background ? \"0 0 5px #000\" : \"\"\n                        }}\n                            className=\"box\"\n                            onClick={() => setBackground(shade.hex_code)}>\n                        </div>\n                        <CopyToClipboard text={`color: ${shade.hex_code};`}>\n                            <p style={{ color: shade.hex_code === background ? \"#fff\" : shade.hex_code, padding: \"7px\", fontSize: 15 }}\n                                onClick={(() => setCurrent(shade.hex_code))}>{shade.hex_code}</p>\n                        </CopyToClipboard>\n                        <button style={{ cursor: \"pointer\" }} onClick={() => deleteShade(shade.id)} >Delete Shade</button>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default ColorPalleteItems"]},"metadata":{},"sourceType":"module"}